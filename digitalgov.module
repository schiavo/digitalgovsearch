<?php


function digitalgov_node_insert($node) {
    _digitalgov_handle_node($node);
}

function digitalgov_node_update($node) {
    _digitalgov_handle_node($node);
}

function _digitalgov_handle_node($node) {

  $properties_to_index = get_index_properties($node); 

  // Convert the node to JSON
  $index_json = drupal_json_encode($properties_to_index);
  dpm($index_json);

  if (!empty($index_json)) {
    $api_endpoint = get_api_endpoint();
    $headers = array('Content-Type' => 'application/x-www-form-urlencoded');
    $request_options = array(
      'headers' => $headers,
      'method' => 'POST', // assuming the API wants a POST
      'data' => 'content-item=' . $index_json
    );
    $response = drupal_http_request($api_endpoint, $request_options);
    dpm($response);  
    // Validate the response here.
  }
  else {
    // watchdog() that we weren't able to convert the node to JSON.
  }
}

function get_index_properties($node) {
  $index_properties = new StdClass();
  $index_properties->title = get_title($node);
  $index_properties->url = get_url($node);
  $index_properties->content = get_content($node);
  
  $summary = get_summary($node);
  if (empty($summary)) {
    $summary = substr($index_properties->content->fields["Body"][0], 0, 25);  // TODO, get this more refined, break on a sentance or word.
  }
  
  $index_properties->summary = $summary;
  $index_properties->updated_at = get_updated_date($node);
  return $index_properties;

}

function get_title($node) {
  return clean_text($node->title);
}

function get_summary($node) {
  $summary = "";
  $body = $node->body;
  if (!empty($body["und"]["0"])) {
    $summary = $body["und"]["0"]["summary"];
    $summary = trim($summary);
  }
  return clean_text($summary);
}

function get_url($node) {
  $path = $node->path["alias"];
  if(empty($path))
  {
    $path = $node->path["source"];
  }
  
  return url($path, array('absolute' => TRUE));

}

// this is where the real work happens
// maybe this StdClass should be made into a actual class that has methods for extracting body, etc.
function get_content($node) {
  $content = new StdClass();
  $content->fields = array();

  $fields = field_info_instances("node", $node->type);
  foreach ($fields as $name => $value) {
    $field = $fields[$name];
    $display = $fields[$name]['display']['default'];
    $field_view = field_view_field("node", $node, $name, $display);
    if(!empty($field_view)) {
      $field_title = $field_view['#title'];
      $field_type = $field_view['#field_type'];
      $items = $field_view['#items'];
      $field_values = array();
      foreach ($items as $item) {
	if ($field_type == 'entityreference') {
	  $entity_node = node_load($item['target_id']);
	  $field_values[] = get_content($entity_node);
	}
	else {  
	  $field_values[] = clean_text($item['value']);
	}
      }
      $content->fields[$field_title] = $field_values;
    }
  }

  return $content;
}

function get_updated_date($node) {
  return date("c", $node->changed);
}

function get_api_endpoint() {
  return "http://www.davevans.org/reflectPost.php";
}

function clean_text($text) {
  
  $text = str_replace(array("\r\n", "\r", "\n"), " ", $text);
  $text = strip_tags($text);
  return $text;

}
